*/node_modules/*
*.anchor
*.DS_Store
anchor-solana-nft/target
**/*.rs.bk
anchor-solana-nft/test-ledger
anchor-solana-nft/.yarn
todo-list-app/target
todo-list-app/test-ledger
todo-list-app/.yarn

android-dapp/*.iml
android-dapp/.gradle
android-dapp/local.properties
android-dapp/.idea/caches
android-dapp/.idea/libraries
android-dapp/.idea/modules.xml
android-dapp/.idea/workspace.xml
android-dapp/.idea/navEditor.xml
android-dapp/.idea/assetWizardSettings.xml
android-dapp/.DS_Store
android-dapp/build
android-dapp/captures
android-dapp/.externalNativeBuild
android-dapp/.cxx
android-dapp/local.properties

waffle-maker/target
waffle-maker/test-ledger
waffle-maker/.yarn

trading-bot-phoenix/.env

solana-security-challenges/target
solana-security-challenges/test-ledger
solana-security-challenges/.yarn
solana-security-challenges/.env

dexterity-hxro/.next/*
dexterity-hxro/.env

lend-borrow/target
lend-borrow/test-ledger
lend-borrow/.yarn


# Byte-compiled / optimized / DLL files
telegram-bot/trades-webhook/__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
telegram-bot/trades-webhook/.Python
telegram-bot/trades-webhook/build/
telegram-bot/trades-webhook/develop-eggs/
telegram-bot/trades-webhook/dist/
telegram-bot/trades-webhook/downloads/
telegram-bot/trades-webhook/eggs/
telegram-bot/trades-webhook/.eggs/
telegram-bot/trades-webhook/lib/
telegram-bot/trades-webhook/lib64/
telegram-bot/trades-webhook/parts/
telegram-bot/trades-webhook/sdist/
telegram-bot/trades-webhook/var/
telegram-bot/trades-webhook/wheels/
telegram-bot/trades-webhook/pip-wheel-metadata/
telegram-bot/trades-webhook/share/python-wheels/
*.egg-info/
telegram-bot/trades-webhook/.installed.cfg
*.egg
telegram-bot/trades-webhook/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
telegram-bot/trades-webhook/pip-log.txt
telegram-bot/trades-webhook/pip-delete-this-directory.txt

# Unit test / coverage reports
telegram-bot/trades-webhook/htmlcov/
telegram-bot/trades-webhook/.tox/
telegram-bot/trades-webhook/.nox/
telegram-bot/trades-webhook/.coverage
telegram-bot/trades-webhook/.coverage.*
telegram-bot/trades-webhook/.cache
telegram-bot/trades-webhook/nosetests.xml
telegram-bot/trades-webhook/coverage.xml
telegram-bot/trades-webhook/*.cover
telegram-bot/trades-webhook/*.py,cover
telegram-bot/trades-webhook/.hypothesis/
telegram-bot/trades-webhook/.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
telegram-bot/trades-webhook/local_settings.py
telegram-bot/trades-webhook/db.sqlite3
telegram-bot/trades-webhook/db.sqlite3-journal

# Flask stuff:
telegram-bot/trades-webhook/instance/
telegram-bot/trades-webhook/.webassets-cache

# Scrapy stuff:
telegram-bot/trades-webhook/.scrapy

# Sphinx documentation
telegram-bot/trades-webhook/docs/_build/

# PyBuilder
telegram-bot/trades-webhook/target/

# Jupyter Notebook
telegram-bot/trades-webhook/.ipynb_checkpoints

# IPython
telegram-bot/trades-webhook/profile_default/
telegram-bot/trades-webhook/ipython_config.py

# pyenv
telegram-bot/trades-webhook/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
telegram-bot/trades-webhook/__pypackages__/

# Celery stuff
telegram-bot/trades-webhook/celerybeat-schedule
telegram-bot/trades-webhook/celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
telegram-bot/trades-webhook/.env
telegram-bot/trades-webhook/.venv
telegram-bot/trades-webhook/env/
telegram-bot/trades-webhook/venv/
telegram-bot/trades-webhook/ENV/
telegram-bot/trades-webhook/env.bak/
telegram-bot/trades-webhook/venv.bak/

# Spyder project settings
telegram-bot/trades-webhook/.spyderproject
telegram-bot/trades-webhook/.spyproject

# Rope project settings
telegram-bot/trades-webhook/.ropeproject

# mkdocs documentation
/site

# mypy
telegram-bot/trades-webhook/.mypy_cache/
telegram-bot/trades-webhook/.dmypy.json
telegram-bot/trades-webhook/dmypy.json

# Pyre type checker
telegram-bot/trades-webhook/.pyre/
